---
import NavItem from './NavItem.astro';
import LanguageIcon from '@/assets/icons/language.svg';
import NavMenuContainer from './NavMenuContainer.astro';
import NavMenuItem from './NavMenuItem.astro';
import { ui } from '@/i18n/ui';
import { languages } from '@/i18n/ui';
---

<NavItem id={ui.label} as="button" class="overflow-visible relative">
  <div class="size-5 overflow-hidden" transition:persist>
    <LanguageIcon
      class="size-5 stroke-transparent fill-navbar-foreground group-hover:fill-accent"
    />
  </div>
  <NavMenuContainer id={`${ui.label}-menu`}>
    {
      Object.values(languages).map(({ code, name }) => (
        <NavMenuItem role="button" class="language-option" data-locale={code}>
          {name}
        </NavMenuItem>
      ))
    }
  </NavMenuContainer>
</NavItem>

<script>
  import type { Locale } from '@/i18n/index';
  import { useTranslatedPath, getLangFromPathname } from '@/i18n/utils';
  import { navigate } from 'astro:transitions/client';
  document.addEventListener('astro:page-load', () => {
    const languageMenuId = 'change-language-menu';
    const languageButtonId = 'change-language';

    const languageMenu = document.getElementById(languageMenuId);
    const languageButton = document.getElementById(languageButtonId);
    const locale = getLangFromPathname(window.location.pathname);

    const translatePath = useTranslatedPath(locale);

    const changeLanguage = (locale: Locale) => {
      const completePath = `${window.location.pathname}${window.location.hash}`;
      const newPath = translatePath(completePath, locale);
      navigate(newPath);
    };

    const toggleMenu = (e: Event) => {
      e.stopPropagation();
      const isClosed = languageMenu?.classList.contains('hidden');
      if (isClosed) {
        languageMenu?.classList.remove('hidden');
        languageMenu?.classList.add('flex-col', 'md:flex');
      } else {
        languageMenu?.classList.remove('flex-col', 'md:flex');
        languageMenu?.classList.add('hidden');
      }
    };
    document.querySelectorAll('.language-option').forEach((button) => {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        const locale = button.getAttribute('data-locale') as Locale;
        changeLanguage(locale);
      });
    });
    // abrir y cerrar menú
    languageButton?.addEventListener('click', toggleMenu);

    // click fuera del menú
    document.addEventListener('click', () => {
      languageMenu?.classList.add('hidden');
      languageMenu?.classList.remove('flex-col', 'md:flex');
    });

    // navbar pegajoso
    document.addEventListener('is-navbar-sticky', ((event: CustomEvent) => {
      if (event.detail) {
        languageMenu?.classList.remove('md:bottom-12');
        languageMenu?.classList.add('md:top-12');
      } else {
        languageMenu?.classList.add('md:bottom-12');
        languageMenu?.classList.remove('md:top-12');
      }
    }) as EventListener);
  });
</script>

<script is:inline data-astro-rerun>
  const languageMenuId = 'change-language-menu';

  const languageMenu = document.getElementById(languageMenuId);

  document.addEventListener('change-navbar-side', (event) => {
    if (event.detail === 'left') {
      languageMenu?.classList.remove('right-10');
      languageMenu?.classList.add('left-10');
    } else {
      languageMenu?.classList.add('right-10');
      languageMenu?.classList.remove('left-10');
    }
  });
</script>
